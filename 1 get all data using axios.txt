actions/index.js==>>

//get data using axois 
import axios from 'axios';

export  const GET_DATA='GET_DATA';

const ROOT_URL='http://localhost:55546/api/studentapi'
//const API_KEY ='?key=asdasfasd';
//console.log('http://localhost:55546/api/studentapi');
export default function GetMethod(){

    const request =axios.get(`${ROOT_URL}`);
 console.log("fffc"+request);

return{
    type:GET_DATA,
    payload: request
};

} 


//--------------

reducer/reducer_get.js==>>

import {GET_DATA} from '../actions/index';
//import GetMethod from '../actions/index';


const INITIAL_STATE={all:[], get:null};

export default function GetCustomer(state=INITIAL_STATE, action){

// if(!action.payload){
//         console.log("reducer1",action.payload);

// }

 console.log("reducer1".green);
  //  console.log("reducer2",action.payload.data);
switch(action.type){
case GET_DATA:
//console.log("reducerget",action.payload);
 return {INITIAL_STATE, all:action.payload.data};

default: return state;
}
}

//--------------

reducer/index.js==>>


import {combineReducers} from 'redux';

import GetCustomer from './reducer_get';


const rootReducer = combineReducers({
    
    getdata: GetCustomer
  
});

export default rootReducer;  

//--------------

container/Get_customer.js==>>

import React,{Component} from 'react';
import {connect} from 'react-redux';
//import {bindActionCreators} from 'redux';
import GetMethod from '../actions/index';
//import rootReducer from '../reducer';

class GetIndex extends Component{
    componentWillMount(){
        this.props.GetMethod();
    }

renderCustomer(){
               
    if (!this.props.bb)
     {
        return (
            <div><h3>Loading..</h3></div>
        );
     }

        return(
            <div> <h1>This is Get data</h1>
            <table className="table table-border table-striped " style={{ "border": "2px solid gray","margin":"10px" }}>

                    <thead>
                        <tr >

                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Age</th>
                            <th>Address</th>
                            <th>College</th>
                            <th>Option</th>

                        </tr>
                    </thead>


                    <tbody>
                        {this.props.bb.map(function(item, key)  {
                            return ( <tr key={key}>
                                    <td> {item.ID}</td>
                                    <td> {item.Name}</td>
                                    <td> {item.Email}</td>
                                    <td> {item.Age}</td>
                                    <td> {item.Address}</td>
                                    <td> {item.College}</td>
                                    <td> <button className="btn btn-danger" onClick={() => this.props.delaction(item.ID)}>DELETE </button>-   
                                     <button className="btn btn-info"  onClick={()=> this.props.selectCustomer(item)}>DETAIL </button>
                                    </td>
                                </tr>)
                            
                        })}

                    </tbody>
                </table>
            
            
            </div>
        )}

    render(){
        return(
           <div>
                {this.renderCustomer()}
           </div>
        );
    }
}



function mapStateToProps(state){
    console.log("container state",state.getdata.all);
    return{
    bb:state.getdata.all
    };
}




export default connect(mapStateToProps,{GetMethod:GetMethod})(GetIndex);



//-----------------

Components/App.js==>>

import React, { Component } from 'react';

import logo from '../logo.svg';

import '../App.css';

import GetIndex from '../Container/Get_Customer';



import {BrowserRouter as Router,

  
 Route,
     
NavLink
  } from 'react-router-dom';


 

const Links=()=>
(
 
 <nav>
 
 <NavLink to="/">Home</NavLink>
 
 <NavLink to={{pathname:'/about'}}> About</NavLink>

 <NavLink  to={{pathname:'/contact'}}> Contact</NavLink>

 <NavLink  replace to={{pathname:'/GetCustomer'}}> GetCustomer</NavLink>

  </nav>

)








class App extends Component 
{
  
render() 
{
    
return (
  
    <div className="App">
   
     <div className="App-header">
   
     <img src={logo} className="App-logo" alt="logo" />
   
           <h2>Welcome to React</h2>
   
     </div>
      
  <p className="App-intro">
       
   To get started, edit <code>src/App.js</code> and save to reload.
  </p>

  


<Router>

<div>

<Links/>


<Route path="/" render={()=> <h1>hello </h1> }/>


<Route path="/About" render={()=> <h1>about </h1> }/>


<Route path="/contact" render={()=> <h1>contact </h1> }/>


<Route path="/GetCustomer" component={GetIndex}/>


</div>

</Router>



     

 </div>
  
  );
 

 }
}



export default App;



//-----------

src/index.js==>>

import React from 'react';

import ReactDOM from 'react-dom';

import App from './Components/App';

import './index.css';


import { Provider } from "react-redux";


import { createStore,applyMiddleware } from "redux";


import Reducers from "./reducer";

import promise from 'redux-promise';




 const createStoreWithMiddleware =applyMiddleware(promise)(createStore);


//console.log("red",Reducers);




ReactDOM.render
(

<Provider store={createStoreWithMiddleware(Reducers)}>


<App />


</Provider>,

document.getElementById('root')
);


        




















